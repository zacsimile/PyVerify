program binsearch
  pre (forall j k, ((0 <= j && j < k && k < N) ==> a[j] <= a[k])) && 0 <= N
  post ((0 <= index && index < N) ==> a[index] = value) && ((0 > index) ==> (forall k, (0 <= k && k < N) ==> a[k] != value))
is
  low, high := 0, N;
  while (low < high)
    inv 0 <= low && low <= high && high <= N
    inv forall i, (0 <= i && i < N && !(low <= i && i < high)) ==> a[i] != value
  do
    mid := (low + high) / 2;
    if a[mid] < value then
      low := mid + 1;
    else
      if value < a[mid] then
        high := mid;
      else
        index := mid;
      end
    end
  end
  index := -1;
end
